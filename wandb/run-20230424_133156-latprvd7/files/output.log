TRAINING DATA: n=100
size of input for one sample: torch.Size([6, 128, 128])
size of output (labels) for one sample: torch.Size([96])
Number of covariates = 6
Number of species = 96
VALIDATION: n=100
in_shape=torch.Size([6, 128, 128])
out_shape=torch.Size([96]), n_species=96
MODEL: cnn(
  (conv1): Conv2d(6, 32, kernel_size=(3, 3), stride=(1, 1))
  (act1): ReLU()
  (pool1): MaxPool2d(kernel_size=3, stride=3, padding=0, dilation=1, ceil_mode=False)
  (drop1): Dropout(p=0.3, inplace=False)
  (conv2): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1))
  (act2): ReLU()
  (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (flat): Flatten(start_dim=1, end_dim=-1)
  (fc4): Linear(in_features=3200, out_features=96, bias=True)
  (act4): ReLU()
)
EPOCH 0
100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:01<00:00,  1.22s/it]
Traceback (most recent call last):
  File "/home/nina/Documents/GeoLifeCLEF/simple_cnn.py", line 103, in <module>
    y_pred = y_pred.detach().numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
LOSS:  tensor(0.7682, dtype=torch.float64)